{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","buttonAction","good","includes","setState","filter","item","messageLine","list","length","result","join","index","lastIndexOf","slice","clearButton","this","className","type","onClick","cn","map","checkItem","selectCheker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAe,CACbC,cAAe,CAAC,Q,EAGlBC,aAAe,SAACC,GACT,EAAKH,MAAMC,cAAcG,SAASD,GAKrC,EAAKE,UAAS,SAACL,GAGb,MAAO,CAAEC,cAFOD,EAAMC,cAAcK,QAAO,SAAAC,GAAI,OAAIA,IAASJ,SAL9D,EAAKE,UAAS,SAACL,GAAD,MAAY,CACxBC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BE,S,EAW9CK,YAAc,SAACC,GACb,GAAoB,IAAhBA,EAAKC,OACP,MAAO,oBAGT,GAAoB,IAAhBD,EAAKC,OACP,MAAM,GAAN,OAAUD,EAAK,GAAf,gBAGF,IAAME,EAASF,EAAKG,KAAK,MACnBC,EAAQF,EAAOG,YAAY,MAEjC,MAAM,GAAN,OAAUH,EAAOI,MAAM,EAAGF,GAA1B,gBAAwCF,EAAOI,MAAMF,EAAQ,GAA7D,kB,EAGFG,YAAc,WACZ,EAAKX,SAAS,CAAEJ,cAAe,M,4CAGjC,WAAU,IAAD,OACCA,EAAkBgB,KAAKjB,MAAvBC,cAMR,OACE,sBAAKiB,UAAU,oCAAf,UACE,sBAAKA,UAAU,kCAAf,UACE,6BACGD,KAAKT,YAAYP,KAEpB,wBACEkB,KAAK,SACLC,QAASH,KAAKD,YACdE,UAAWG,IACT,SACA,WACA,YACA,CAAE,eAA0C,IAAzBpB,EAAcS,SAPrC,sBAaF,oBACEQ,UAAU,UADZ,SAGGpB,EAAgBwB,KAAI,SAAAnB,GACnB,IA3BeoB,EA2BTC,GA3BSD,EA2B6BpB,EA1B3CF,EAAcG,SAASmB,IA4BxB,OACE,sBAAgBL,UAAU,eAA1B,UACE,oBACEA,UAAWG,IACT,YACA,CAAE,+BAAgCG,IAHtC,SAMGrB,IAEH,wBACEgB,KAAK,SACLC,QAAS,kBAAM,EAAKlB,aAAaC,IACjCe,UACEG,IACE,SACA,WACA,eACA,CAAE,aAAcG,GAChB,CAAE,aAAcA,IATtB,SAaGA,EACG,SAAW,aAvBTrB,e,GAvENsB,IAAMC,WAyGT3B,I,MC1Hf4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.161317d0.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport cn from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: ['Jam'],\n  };\n\n  buttonAction = (good: string): void => {\n    if (!this.state.selectedGoods.includes(good)) {\n      this.setState((state) => ({\n        selectedGoods: [...state.selectedGoods, good],\n      }));\n    } else {\n      this.setState((state) => {\n        const newList = state.selectedGoods.filter(item => item !== good);\n\n        return { selectedGoods: newList };\n      });\n    }\n  };\n\n  messageLine = (list: string[]) => {\n    if (list.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (list.length === 1) {\n      return `${list[0]} is selected`;\n    }\n\n    const result = list.join(', ');\n    const index = result.lastIndexOf(', ');\n\n    return `${result.slice(0, index)} and ${result.slice(index + 2)} are selected`;\n  };\n\n  clearButton = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    const selectedOrNot = (checkItem: string): boolean => {\n      return selectedGoods.includes(checkItem);\n    };\n\n    return (\n      <div className=\"block container container--margin\">\n        <div className=\"box is-size-2 container--margin\">\n          <h1>\n            {this.messageLine(selectedGoods)}\n          </h1>\n          <button\n            type=\"button\"\n            onClick={this.clearButton}\n            className={cn(\n              'button',\n              'is-light',\n              'is-danger',\n              { 'is-invisible': (selectedGoods.length === 0) },\n            )}\n          >\n            Clear\n          </button>\n        </div>\n        <ul\n          className=\"columns\"\n        >\n          {goodsFromServer.map(good => {\n            const selectCheker: boolean = selectedOrNot(good);\n\n            return (\n              <div key={good} className=\"column block\">\n                <li\n                  className={cn(\n                    'is-medium',\n                    { 'has-background-success-light': selectCheker },\n                  )}\n                >\n                  {good}\n                </li>\n                <button\n                  type=\"button\"\n                  onClick={() => this.buttonAction(good)}\n                  className={\n                    cn(\n                      'button',\n                      'is-light',\n                      'is-fullwidth',\n                      { 'is-primary': selectCheker },\n                      { 'is-danger': !selectCheker },\n                    )\n                  }\n                >\n                  {selectCheker\n                    ? 'Remove' : 'Select'}\n                </button>\n              </div>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}